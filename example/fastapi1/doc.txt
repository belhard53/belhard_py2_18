ВИДЫ API
    REST/RESTful	HTTP, JSON, простой, гибкий	Веб- и мобильные приложения
    GraphQL	Запрос только нужных данных, один endpoint	Сложные клиенты 
    gRPC	Бинарный формат, высокая производительность	Внутренняя связь микросервисов
    SOAP	XML, строгий стандарт, безопасность	Финансовые, государственные системы
    WebSocket	Двусторонняя связь в реальном времени	Чаты, уведомления, игры

REST API (Representational State Transfer Application Programming Interface) — 
        это архитектурный стиль для создания веб-сервисов, который определяет, 
        как клиент и сервер должны взаимодействовать между собой через 
        стандартные протоколы, чаще всего HTTP    

        Это современный стандарт для построения веб-сервисов, 
        который обеспечивает эффективное, масштабируемое и 
        понятное взаимодействие между различными компонентами 
        программных систем

        Преимущества REST API
            Простота и стандартизация взаимодействия
            Масштабируемость и гибкость архитектуры
            Независимость клиента и сервера        

GET — получение информации, не изменяет данные на сервере.
POST — создание нового ресурса или отправка данных для обработки.
PUT — полное обновление существующего ресурса или создание, если не существует.
PATCH — частичное обновление ресурса.
DELETE — удаление ресурса.
OPTIONS — получение информации о поддерживаемых методах для ресурса.
HEAD — аналогичен GET, но возвращает только заголовки ответа.            

Ресурсы и URL
    В REST API все объекты (ресурсы) имеют уникальные URL-адреса. 
    Например, пользователь с ID 12 может быть доступен по адресу: GET /users/12 HTTP


коды ответов
  200-299	Успех	Запрос выполнен успешно
  200	OK	Успешный запрос
  201	Created	Ресурс создан
  204	No Content	Успешно, но нет содержимого
  400-499	Ошибка клиента	Неправильный запрос
  400	Bad Request	Неверный синтаксис
  401	Unauthorized	Требуется аутентификация
  403	Forbidden	Доступ запрещен
  404	Not Found	Ресурс не найден
  500-599	Ошибка сервера	Проблема на сервере    


/api/quizes/
    GET - все квизы
    POST {"name":"quiz1"} - добавить в базу - вернет в ответ id
/api/quizes/11/
    GET - вернуть квиз с id 11
    PUT - {name:quiz2} - обновить данные c id 11
    DELETE   - удалить квиз c id 11

/api/quizes?question_id=1 - все квизы с вопросом id=1
/api/quizes/1/questions - все вопросом квиза с id=1
/api/questions?quiz_id=1    

api/auth/ - отправить пас логин - возвращает токен

GET /api/users - получить всех пользователей
GET /api/users/1 - получить пользователя с ID=1
GET /api/users/1/orders - получить заказы пользователя с ID=1
GET /api/users/1/orders/5 - получить заказ №5 пользователя с ID=1


примеры работы API
https://jsonplaceholder.typicode.com/


отправка запросов
https://restninja.io/
https://www.postman.com/



Типичная структура ответа
{
  "status": "success",
  "data": {
    "id": 1,
    "name": "John",
    "email": "john@example.com"
  },
  "message": "User retrieved successfully"
}

Или для ошибки:
{
  "status": "error",
  "message": "User not found",
  "code": 404
}
