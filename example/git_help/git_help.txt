pull request - это запрос на мерж ветки, как вариант что бы его проверили все остальные и согласились

сначала отправляем ветку на хаб
git push -u origin <branch_name>
после этого там появляется предложение сделать пулреквест и вмержить новую ветку в main
можем сделать или закрыть без мержа



pull request - в чужой проект

форкаем - клонируем - изменяем - пушим
на хабе создаем пулреквест и предлагаем последний комит в оригинал
этот пулреквест появиься в оригинале





git config --global user.email my_email@gmail.com
git config --global user.name “name”

git config --list



git help <command>



git init

git clone <url>



git add *.txt

git add some_file.txt

git add .



git status

git commit -m “some comment”



git log

git log --oneline - краткая запись

git log -p - подробно с изменениями 

git log --pretty=format:"%h - %an, %ar : %s"

git log --all --graph --oneline



git checkout HEAD 

git checkout <HASH>  - только посмотреть на состояние кода в этом коммите



git rm --cached *.txt

git rm --cached <file>



git tag -a <tag>

git tag -a <tag> <commit>



git restore file или . - отменить изменнеия без коммита

git revert hash - отменяет измения создавая еще один коммит. Таким образом есть история

git reset hash - отмена коммита как будто не существовало, нельзя если уже отправлен на github





git branch - список веток

git branch vetka2 - создать новую ветку

git checkout  name - переключить 

git checkout -b b3 - переключить с созданием

git branch -d <name> - удалить

 git push --set-upstream origin <branch_name> - скопировать в хаб и назначить удаленную ветку

 git push -u origin <branch_name> - назначить удаленную ветку - тоже самое



git merge hotfix - влить hotfix в текущую



git checkout master - перейти на ветку master

git rebase master

git checkout hotfix



git rebase master hotfix - выравнивает историю веток в одну линию



git cherry-pick <hash>  берет один коммит из другой ветки и помещает его в текущую



git remote - список удаленных

git remote add <name> <url> - name оббычно делают - origin

git remote show <name>

git remote remove <name>



git push <remote-name> <branch-name>

git push --force - не рекомендуется



git fetch - загружает но не модифицирует

git pull - загрузка с удаленного





.gitignore

Восклицательный знак(!) в начале строки инвертирует шаблон (используется для исключений)
Две звёздочки(**) используются для указания всех подпапок
Звёздочка(*) заменяет любое количество символов
Символ слеша "/" в начале строки указывает на текущую папку (где лежит .gitignore)
Строки начинающиеся с # являются комментариями
Пустые строки игнорируются
Каждая строка – отдельный шаблон





---------------------------------------------------------

Кнопка "Compare & pull request" на GitHub появляется после того, как вы создали новую ветку и отправили её на GitHub. Эта кнопка предназначена для создания запроса на слияние (pull request) между вашей новой веткой и основной веткой (обычно main или master).

Для чего нужна кнопка "Compare & pull request"?

Сравнение изменений: Эта кнопка позволяет сравнить изменения между вашей новой веткой и целевой веткой (например, main). Это помогает визуализировать все изменения, которые вы внесли в новой ветке.



Создание запроса на слияние (pull request): После сравнения изменений, вы можете создать pull request. Pull request — это запрос на слияние вашей новой ветки с основной веткой. Это позволяет другим разработчикам просмотреть и обсудить ваши изменения перед тем, как они будут включены в основную ветку.



Создание запроса на слияние (pull request): После сравнения изменений, вы можете создать pull request. Pull request — это запрос на слияние вашей новой ветки с основной веткой. Это позволяет другим разработчикам просмотреть и обсудить ваши изменения перед тем, как они будут включены в основную ветку.



Автоматическое тестирование: Если у вас настроено автоматическое тестирование (например, через GitHub Actions), pull request может запустить эти тесты, чтобы убедиться, что ваши изменения не сломали ничего.

Код-ревью: Pull request также служит инструментом для код-ревью. Другие члены команды могут просмотреть ваш код, оставить комментарии и предложения по улучшению.





Как использовать кнопку "Compare & pull request"?

Нажмите на кнопку: После отправки новой ветки на GitHub, нажмите на кнопку "Compare & pull request".



Выберите целевую ветку: Выберите ветку, в которую вы хотите слить изменения (обычно main или master).



Напишите описание: Введите краткое описание того, что вы изменили и почему.



После создания pull request, другие разработчики смогут просмотреть и обсудить ваши изменения. Как только все согласятся, что изменения готовы, pull request можно будет слить в основную ветку.

Создайте pull request: Нажмите на кнопку "Create pull request", чтобы создать запрос.